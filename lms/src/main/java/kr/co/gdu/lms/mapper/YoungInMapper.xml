<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.gdu.lms.mapper.YoungInMapper">
	<!-- ===============================강의=============================== -->
	<select id="selectLearningStudentName"
		resultType="String">
		SELECT 
			login_id loginId
		FROM education
	</select>
		
	<insert id="insertStudentInLecture"
		parameterType="String">
		INSERT INTO 
		education (
			lecture_name
			, login_id
			, education_date
		)
		VALUES(
			#{lectureName}
			, #{loginId}
			, NOW()
		)
	</insert>
		
	<select id="selectStudentListByLectureName"
		parameterType="String"
		resultType="kr.co.gdu.lms.vo.Student">
			SELECT
		        s.login_id loginId
		        , s.student_name studentName
		        , s.student_birth studentBirth
		        , s.student_gender studentGender
		        , s.address address
		        , s.detail_address detailAddress
		        , s.student_email studentEmail
		        , CONCAT(SUBSTRING(s.student_phone, 1,3),'-',(SUBSTRING(s.student_phone,4,4)),'-',(SUBSTRING(s.student_phone,8,4))) studentPhone
		        , s.military_status militaryStatus
		        , s.graduate
		        , s.create_date createDate   
		     FROM student s
		     INNER JOIN education e
		     	ON s.login_id = e.login_id
		     WHERE e.lecture_name = #{lectureName}
	</select>
	
	<select id="selectStudentGroup"
		resultType="map">
		SELECT 
			lecture_name lectureName
			,COUNT(*) cnt
		FROM education
		GROUP BY lecture_name
	</select>
	
	
	<insert id="insertTextbook"
			parameterType="kr.co.gdu.lms.vo.Textbook">
		INSERT INTO textbook(
			textbook_name
			, textbook_publisher
			, textbook_writer
			, textbook_price
			, textbook_page
			, create_date
			, update_date
		)
		VALUES (
			#{textbookName}
			, #{textbookPublisher}
			, #{textbookWriter}
			, #{textbookPrice}
			, #{textbookPage}
			, NOW()
			, NOW()
		)
		
	</insert>
	
	<select id="selectTextbookList"
			resultType="kr.co.gdu.lms.vo.Textbook">
		SELECT 
			textbook_name textbookName
			, textbook_no textbookNo
		FROM textbook;
	</select>
	
	<select id="selectSubjectList"
			resultType="String">
		SELECT
			subject_name subjectName
		FROM subject;
	</select>
	
	<insert id="insertSubjectTextbook"
			parameterType="kr.co.gdu.lms.vo.SubjectTextbook">
		INSERT INTO subject_textbook(subject_name, textbook_no)
		VALUES(#{subjectName}, #{textbookNo})
	</insert>
	
	<!--  책을 수령 했는지 안했는지 판별 -->
	<select id="selectRecordBook"
			parameterType="map"
			resultType="map">
		SELECT
			ls.subject_name subjectName
			, COUNT(*) cnt
		FROM textbook_record tr
			INNER JOIN education edu
		ON tr.education_no = edu.education_no
			INNER JOIN lecture_subject ls
		ON tr.lecture_subject_no = ls.lecture_subject_no
		WHERE ls.subject_name = #{subjectName}
			and edu.login_id = #{loginId}
	</select>
	
	<!--  디스틴트로 강의별 과목 가져오는 매퍼 -->
	<select id="selectSubjectListByLectureNameYoungIn"
		parameterType="String"
		resultType="String">
		SELECT distinct
			subject_name subjectName 
		FROM lecture_subject
		WHERE lecture_name = #{lectureName}
	</select>
	
	<select id="selectLectureNameByLoginId"
			parameterType="String"
			resultType="String">
		SELECT
			lecture_name
		FROM education
			WHERE login_id = #{loginId}
		
	</select>
	
	<select id="selectEducationNoByLoginId"
			parameterType="String"
			resultType="int">
		SELECT
			education_no
		FROM education
			WHERE login_id = #{loginId}
		
	</select>
	
	<select id="selectLectSubNo"
			parameterType="kr.co.gdu.lms.vo.LectureSubject"
			resultType="int">
		SELECT 
			lecture_subject_no lectureSubjectNo
		FROM lecture_subject
		WHERE lecture_name = #{lectureName}
		AND subject_name = #{subjectName}
	</select>
	
	<insert id="insertTextbookRecord"
			parameterType="kr.co.gdu.lms.vo.TextbookRecord">
		INSERT INTO textbook_record(
			education_no
			, lecture_subject_no
			, textbook_signfile_name
			, textbook_signfile_origin_name
			, textbook_signfile_type
			, textbook_signfile_size
			, create_date
		)
		VALUES(
			#{educationNo}
			, #{lectureSubjectNo}
			, #{textbookSignfileName}
			, 'none'
			, 'none'
			, 0
			, NOW()
		)
	</insert>
	
	<select id="selectSignfileName"
			parameterType="int"
			resultType="String">
		SELECT
			textbook_signfile_name
		FROM textbook_record
		WHERE education_no = #{educationNo}
		AND lecture_subject_no = #{lectureSubjectNo}
	</select>
		<!-- ===============================커뮤니티=============================== -->
		
	<!--  qna insert + 제네레이트 키값 : qnaNo -->
	<insert id="addQnaAction"
			parameterType="kr.co.gdu.lms.vo.Qna">
		<selectKey resultType="int" keyProperty="qnaNo" order="AFTER">
			SELECT LAST_INSERT_ID();
		</selectKey>
		INSERT INTO qna(
			qna_title
			, qna_content
			, login_id
			, create_date
			, qna_disclosure
			, qna_kind
			, qna_state
		)
		VALUES(
			#{qnaTitle}
			, #{qnaContent}
			, #{loginId}
			, NOW()
			, #{qnaDisclosure}
			, '문의'
			, '대기중'
		)
	</insert>
	
	<!-- 파일 넣기 qna -->
	<insert id="addQnaFileInsert"
			parameterType="kr.co.gdu.lms.vo.QnaFile">
		INSERT INTO qna_file(
			qna_no
			, login_id
			, qna_file_name
			, qna_file_origin_name
			, qna_file_type
			, qna_file_size
			, qna_file_create_date
		)
		VALUES (
			#{qnaNo}
			, #{loginId}
			, #{qnaFileName}
			, #{qnaFileOriginName}
			, #{qnaFileType}
			, #{qnaFileSize}
			, NOW()
		)
	</insert>
	
	<!-- qnaOne 보기 -->
	<select id="selectQnaByQnaNo"
			parameterType="int"
			resultType="kr.co.gdu.lms.vo.Qna">
		SELECT
			qna_no qnaNo
			, qna_title qnaTitle
			, qna_content qnaContent
			, login_id loginId
			, create_date createDate
			, qna_disclosure qnaDisclosure
			, qna_kind qnaKind
			, qna_state qnaState
		FROM qna
		WHERE qna_kind = '문의' AND qna_No = #{qnaNo}
	</select>
	
	<!-- qnaOne 보기 -->
	<select id="selectQnaByQnaNoAnswer"
			parameterType="int"
			resultType="kr.co.gdu.lms.vo.Qna">
		SELECT
			qna_no qnaNo
			, qna_title qnaTitle
			, qna_content qnaContent
			, login_id loginId
			, create_date createDate
			, qna_disclosure qnaDisclosure
			, qna_kind qnaKind
			, qna_state qnaState
		FROM qna
		WHERE qna_kind = '답변' AND qna_answer_no = #{qnaNo}
	</select>
	
	<!-- qnaOneFileList 보기 -->
	<select id="selectQnaFileByQnaNo"
			parameterType="int"
			resultType="String">
		SELECT
			qna_file_name qnaFileName
		FROM qna_file
		WHERE qna_no = #{qnaNo}
	</select>
	
	<!--  qna답변 insert -->
	<insert id="insertQnaAnswer"
			parameterType="kr.co.gdu.lms.vo.Qna">
		INSERT INTO qna(
			qna_title
			, qna_content
			, login_id
			, create_date
			, qna_disclosure
			,  qna_kind
			, qna_state
			, qna_answer_no
		)VALUES(
			#{qnaTitle}
			, #{qnaContent}
			, #{loginId}
			, NOW()
			, '공개'
			, '답변'
			, '답변완료'
			, #{qnaNo}
		)
	</insert>
	
	<update id="updateByinsertQnaAnswer"
			parameterType="int">
		UPDATE qna
		SET qna_state = '답변완료'
		WHERE qna_no = #{qnaNo}
	</update>
	
	<!-- qna파일 삭제 -->
	<delete id="deleteByQnaFileNo"	
			parameterType="int">
		DELETE FROM qna_file
		WHERE qna_no = #{qnaNo}
	</delete>
	
	<!-- qna 삭제 -->
	<delete id="deleteByQnaNo"
			parameterType="int">
		DELETE FROM qna
		WHERE qna_no = #{qnaNo} OR qna_answer_no = #{qnaNo}		
	</delete>
	
	<!-- 학생별 군필명 -->
	<select id="selectMilitaryStatus"
			resultType="java.util.Map">
		SELECT 
			military_status lable
			, COUNT(military_status) data
		FROM student
		GROUP BY military_status
	</select>
</mapper>