<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.gdu.lms.mapper.AssignmentMapper">
	<!-- 과제 리스트 출력 -->
	<select id="selectAssignmentExam"
			parameterType="String"
			resultType="kr.co.gdu.lms.vo.AssignmentExam">
		SELECT
			 a.assignment_exam_no assignmentExamNo
			, a.education_no educationNo
			, assignment_exam_title assignmentExamTitle
			, assignment_exam_content assignmentExamContent
			, assignment_deadline assignmentDeadLine
			, a.create_date createDate
		FROM assignment_exam a 
		INNER JOIN education e 
		ON a.education_no = e.education_no
		INNER JOIN lecture l 
		ON e.lecture_name = l.lecture_name
		WHERE e.lecture_name = #{lectureName}
		AND l.lecture_active = '1'
		ORDER BY a.create_date DESC
	</select> 
	<!-- 과제 입력 -->
	<insert id="insertAssignmentExam"
			parameterType="kr.co.gdu.lms.vo.AssignmentExam">
		INSERT INTO assignment_exam(
			education_no
			, assignment_exam_title
			, assignment_exam_content
			, assignment_deadline
			, create_date
		)VALUES(
			#{educationNo}
			, #{assignmentExamTitle}
			, #{assignmentExamContent}
			, #{assignmentDeadLine}
			, NOW()
		)
	</insert>
	<!-- 학생 과제 입력 -->
	<insert id="insertAssignmentSubmit"
			parameterType="kr.co.gdu.lms.vo.AssignmentSubmit">
		INSERT INTO assignment_submit(
			assignment_exam_no
			, education_no
			, assignment_signfile_url
			, assignment_submit_content
			, create_date
			, update_date
			, assignment_submit_score
		)VALUES(
			#{assignmentExamNo}
			, #{educationNo}
			, #{assignmentSignfileURL}
			, #{assignmentSubmitContent}
			, NOW()
			, NOW()
			, '채점중'
		)

	</insert>
	<!-- 방금 출제한 과제 번호 찾기 -->
	<select id="selectassignmentExamNo" 
			resultType="int">
		SELECT assignment_exam_no assignmentExamNo 
		FROM assignment_exam 
		WHERE create_date = NOW()
	</select>
	<!-- 과제 상세보기  -->
	<select id="selectAssignmentOne"
			resultType="kr.co.gdu.lms.vo.AssignmentExam" 
			parameterType="int">
		SELECT 
			assignment_exam_no assignmentExamNo
			, education_no educationNo
			, assignment_exam_title assignmentExamTitle
			, assignment_exam_content assignmentExamContent
			, assignment_deadline assignmentDeadLine
			, create_date createDate
		FROM assignment_exam
		WHERE assignment_exam_no = #{assignmentExamNo}
	</select>
	<!--사용자의 교육 번호 찾아오기 -->
	<select id="selectEducation" 
			resultType="java.util.Map"
			parameterType="String">
		SELECT 
			education_no educationNo
			,e.lecture_name lectureName
		FROM education e INNER JOIN lecture l 
		ON e.lecture_name = l.lecture_name
		WHERE e.login_id = #{loginId} 
		AND l.lecture_active = '1'
	</select>
	<!-- 학생 자신만 보는 과제제출 -->
	<select id="selectAssignmentSubmit"
		parameterType="java.util.Map"
		resultType="kr.co.gdu.lms.vo.AssignmentSubmit">
		SELECT
			assignment_exam_no assignmentExamNo
			, education_no educationNo
			, assignment_signfile_url assignmentSignfileURL
			, assignment_submit_content assignmentSubmitContent
			, create_date createDate
			, update_date updateDate
			, assignment_submit_score assignmentSubmitScore
		FROM assignment_submit
		WHERE assignment_exam_no = ${assignmentExamNo} 
		AND education_no=${educationNo}
	</select>
	<!-- 모든 학생 과제 강사 입장에서 보는 쿼리 -->
	<select id="selectAssignmentSubmitTeacher"
			parameterType="java.util.Map"
			resultType="kr.co.gdu.lms.vo.AssignmentSubmit">
			SELECT
			a.assignment_exam_no assignmentExamNo
			, a.education_no educationNo
			, assignment_signfile_url assignmentSignfileURL
			, assignment_submit_content assignmentSubmitContent
			, create_date createDate
			, update_date updateDate
			, assignment_submit_score assignmentSubmitScore
			, e.login_id loginId
			, f.assignment_file_name assignmentFileName
			, f.assignment_file_origin_name assignmentFileOriginName
			, f.assignment_file_type assignmentFileType
		FROM assignment_submit a 
		INNER JOIN education e 
		ON e.education_no = a.education_no
		INNER JOIN assignment_file f
		ON a.assignment_exam_no = f.assignment_exam_no
		WHERE a.assignment_exam_no = #{assignmentExamNo}
		GROUP BY e.login_id
	</select>
	<!-- 점수 입력 -->
	<update id="updateScore" 
			parameterType="java.util.Map">
		UPDATE assignment_submit SET 
			assignment_submit_score = #{assignmentSubmitScore}
		WHERE assignment_exam_no = #{assignmentExamNo} AND education_no= #{educationNo}
	</update>
	<!-- 과제 변경 -->
	<update id="updateAssignmentExam"
			parameterType="kr.co.gdu.lms.vo.AssignmentExam">
		UPDATE assignment_exam SET 
			assignment_exam_title = #{assignmentExamTitle}
			, assignment_deadline = #{assignmentDeadLine}
			, assignment_exam_content = #{assignmentExamContent}
		WHERE assignment_exam_no = #{assignmentExamNo}
	</update>
	<!-- 과목 리스트 뽑아오기 -->
	<select id="selectLectureNameList"
			resultType="kr.co.gdu.lms.vo.Lecture">
		SELECT lecture_name lectureName 
		FROM lecture 
		WHERE lecture_active = '1'
	</select>
	<!-- 과제 삭제 -->
	<delete id="deleteAssignmentSubmit" 
			parameterType="int">
		DELETE FROM assignment_submit 
		WHERE assignment_exam_no = #{assignmentExamNo}
	</delete>
	<!-- 과목 삭제 -->
	<delete id="deleteAssignment" 
			parameterType="int">
		DELETE FROM assignment_exam 
		WHERE assignment_exam_no = #{assignmentExamNo}
	</delete>
</mapper>