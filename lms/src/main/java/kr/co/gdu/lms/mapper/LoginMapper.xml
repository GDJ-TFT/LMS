<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.gdu.lms.mapper.LoginMapper">
	<!-- 해당 아이디가 비밀번호 변경한 최근 날짜 출력 -->
	<select id="selectPwRecordDate"
			parameterType="String"
			resultType="String">
		SELECT
			update_date
		FROM pw_record
		WHERE login_id = #{loginId}
		ORDER BY update_date DESC
		LIMIT 1		
	</select>
	
	<!-- 비밀번호 변경이력 날짜 업데이트 -->
	<update id="updatePwRecord"
			parameterType="String">
		UPDATE pw_record
		SET update_date = NOW()
		WHERE update_date = #{updateDate}
	</update>

	<!-- 비밀번호 변경 며칠이 지났는지 -->
	<select id="selectDiffDay"
			parameterType="String"
			resultType="int">
		SELECT
			TIMESTAMPDIFF(DAY, update_date, NOW())
		FROM pw_record
		WHERE login_id = #{loginId}
		ORDER BY update_date DESC
		LIMIT 0, 1;
	</select>
	
	<update id="updateAddMemberActiveDenied"
			parameterType="String">
		UPDATE login
		SET login_active = '3'
		WHERE login_id = #{loginId}
	</update>
	
	<update id="updateAddMemberActive"
			parameterType="String">
		UPDATE login 
		SET login_active = '1'
		WHERE login_id = #{loginId}
	</update>
	
	<select id="selectAddManagerList"
			resultType="kr.co.gdu.lms.vo.Manager">
		SELECT
			m.login_id loginId
			, m.manager_name managerName
			, m.create_date createDate
		FROM manager m JOIN login l
		WHERE m.login_id = l.login_id AND l.login_active = '2';
	</select>
	
	<select id="selectAddTeacherList"
			resultType="kr.co.gdu.lms.vo.Teacher">
		SELECT
			t.login_id loginId
			, t.teacher_name teacherName
			, t.create_date createDate
		FROM teacher t JOIN login l
		WHERE t.login_id = l.login_id AND l.login_active = '2';
	</select>
	
	<select id="selectAddStudentList"
			resultType="kr.co.gdu.lms.vo.Student">
		SELECT
			s.login_id loginId
			, s.student_name studentName
			, s.create_date createDate
		FROM student s JOIN login l
		WHERE s.login_id = l.login_id AND l.login_active = '2';
	</select>
	
	<!-- 바꾸는 비밀번호와 비밀번호 변경 이력 비교 -->
	<select id="lastLoginPwCheck"
			parameterType="kr.co.gdu.lms.vo.Login"
			resultType="String">
		SELECT login_pw = PASSWORD(#{loginPw}) loginPw
		FROM pw_record
		WHERE login_id = #{loginId}
		ORDER BY update_date DESC
		LIMIT 0,1;	
	</select>

	<!-- 로그인 - active가 1이고 로그인 아이디와 비밀번호 확인하여 맞다면 해당 level 출력  -->
	<select id="loginAndSelectLevel"
			parameterType="kr.co.gdu.lms.vo.Login"
			resultType = "kr.co.gdu.lms.vo.Login">
		SELECT 
			login_id loginId
			, level
		FROM login
		WHERE login_active='1' AND login_id=#{loginId} AND login_pw=PASSWORD(#{loginPw});
	</select>
	
	<!-- id 중복 체크 위해 id 리스트 받기-->
	<select id = "selectIdCnt"
			parameterType="String"
			resultType="int">
		SELECT 
			count(*)
		FROM login
		WHERE login_id=#{id}
	</select>
	
	<!-- 회원가입 - 회원정보넣기 -->
	<insert id="insertMember" parameterType="kr.co.gdu.lms.vo.MemberForm">
		
		<if test='"manager".equals(addChk)'>
			INSERT INTO manager		
		</if>
		<if test='"teacher".equals(addChk)'>
			INSERT INTO teacher
		</if>
		<if test='"student".equals(addChk)'>
			INSERT INTO student
		</if>
		VALUES(
			#{loginId}
			, #{name}
			, #{birth}
			, #{gender}
			, #{address}
			, #{detailAddr}
			, #{email}
			, #{phone}
		<if test='"manager".equals(addChk)'>
			, #{deptNo}
			, #{positionNo}
		</if>
		<if test='"teacher".equals(addChk)'>
			, #{graduate}
		</if>
		<if test='"student".equals(addChk)'>
			, #{graduate}
			, #{military}
		</if>
			, NOW()
			, NOW()
		)
	</insert>

	<!-- 회원가입 - 로그인테이블에 넣기 -->
	<insert id="insertLogin" parameterType="java.util.Map">
		INSERT INTO login
		VALUES(
			#{loginId}
			, PASSWORD(#{loginPw})
			, #{level}
			, '1'
			, NOW()
			, NOW()
			, NOW()
		)
	</insert>
	<!-- 로그인 - 마지막 로그인날짜 업데이트 -->
	<update id="updateLastLoginDate"
			parameterType="String">
		UPDATE login
		SET last_login_date = now()
		WHERE login_id=#{loginId}
	</update>
	
	<!-- 학생, 매니저, 강사 아이디 찾기 -->
	<select id = "selectAllLoginId"
			parameterType="java.util.Map"
			resultType="String">
		SELECT l.login_id loginId
		FROM login AS l
		
		<if test='"student".equals(msg)'>
			JOIN student AS s
				ON l.login_id = s.login_id
			WHERE s.student_name = #{name}
				AND s.student_email = #{email};
		</if>
		<if test='"manager".equals(msg)'>
			JOIN manager AS m
				ON l.login_id = m.login_id
			WHERE m.manager_name = #{name}
				AND m.manager_email = #{email};
		</if>
		<if test='"teacher".equals(msg)'>
			JOIN teacher AS t
				ON l.login_id = t.login_id
			WHERE t.teacher_name = #{name}
				AND t.teacher_email = #{email};
		</if>
	</select>
	
	<!--학생, 강사, 매니저 비밀번호 찾기-->
	<select id="selectAllLoginPw"
			parameterType="java.util.Map"
			resultType="int">
		SELECT COUNT(*) cnt
		FROM login AS l
	
		<if test='"student".equals(msg)'>
			JOIN student AS s
				ON l.login_id = s.login_id
			WHERE s.login_id = #{loginId}
				AND s.student_name = #{name}
				AND s.student_email = #{email};
		</if>	
		<if test='"manager".equals(msg)'>
			JOIN manager AS m
				ON l.login_id = m.login_id
			WHERE m.login_id = #{loginId}
				AND m.manager_name = #{name}
				AND m.manager_email = #{email};
		</if>
		<if test='"teacher".equals(msg)'>
			JOIN teacher AS t
				ON l.login_id = t.login_id
			WHERE t.login_id = #{loginId}
				AND t.teacher_name = #{name}
				AND t.teacher_email = #{email};
		</if>
	</select>
	
	<!-- 학생,강사,매니저 비밀번호 변경 -->
	<update id="updatePw"
			parameterType="kr.co.gdu.lms.vo.Login">
		UPDATE login SET login_pw=PASSWORD(#{loginPw}), update_date = NOW()
		WHERE login_id = #{loginId};
	</update>
	
	<!-- 학생,강사,매니저 비밀번호 변경 이력 테이블 삽입 -->
	<insert id="insertPwRecord"
			parameterType="kr.co.gdu.lms.vo.Login">
		INSERT INTO pw_record VALUES (#{loginId},PASSWORD(#{loginPw}), NOW());
	</insert>
	
	<select id="selectLevelByLoginId"
			parameterType="String"
			resultType="int">
		SELECT LEVEL
		FROM login
		WHERE login_id=#{loginId}		
	</select>
		
</mapper>