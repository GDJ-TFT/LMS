<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.gdu.lms.mapper.LectureMapper">
	<select id="selectTeacher"
			resultType = "kr.co.gdu.lms.vo.Teacher">
			SELECT
				login_id loginId
				, teacher_name teacherName
				, teacher_birth teacherBirth
				, address
				, detail_addr detailAddr
				, teacher_email teacherEmail
				, teacher_phone teacherPhone
				, graduate
				, create_date createDate
				, update_date updateDate
			FROM teacher
	</select>
	
	<select id="selectManager"
			resultType = "kr.co.gdu.lms.vo.Manager">
		SELECT
			login_id loginId
			, manager_name managerName
			, manager_birth manaberBirth
			, manager_gender managerGender
			, address
			, detail_addr detailAddr
			, manager_email managerEmail
			, manager_phone managerPhone
			, dept_no deptNo
			, position_no positionNo
			, create_date createDate
			, update_date updateDate
		FROM manager
	</select>
	
	<select id="selectLectureRoom"
			resultType = "kr.co.gdu.lms.vo.LectureRoom">
		SELECT
			lecture_room_name lectureRoomName
			, lecture_room_location lectureRoomLocation
			, lecture_room_admit lectureRoomAdmit
			, create_date createDate
			, update_date updateDate
		FROM lecture_room
	</select>
	
	<insert id="insertLecture"
		parameterType="kr.co.gdu.lms.vo.Lecture">
		INSERT INTO lecture(
			lecture_name
			, teacher
			, manager
			, lecture_start_date
			, lecture_end_date
			, lecture_room_name
			, lecture_student_capacity
			, login_id
			, lecture_active
			, create_date
			, update_date)
		VALUES(
			#{lectureName}
			, #{teacher}
			, #{manager}
			, #{lectureStartDate}
			, #{lectureEndDate}
			, #{lectureRoomName}
			, #{lectureStudentCapacity}
			, #{loginId}
			, '0'
			, NOW()
			, NOW()
			)
	</insert>
	
	<select id="selectLectureList"
		resultType="kr.co.gdu.lms.vo.Lecture">
	select
		lecture_name lectureName
		, teacher
		, manager
		, lecture_start_date lectureStartDate
		, lecture_end_date lectureEndDate
		, lecture_room_name lectureRoomName
		, lecture_student_capacity lectureStudentCapacity
		, login_id loginId
		, lecture_active lectureActive
		, create_date createDate
		, update_date updateDate
	FROM lecture
	WHERE lecture_active = '1'
	</select>	
	
	<select id="selectNotAcceptLectureList"
		resultType="kr.co.gdu.lms.vo.Lecture">
	Select
		lecture_name lectureName
		, teacher
		, manager
		, lecture_start_date lectureStartDate
		, lecture_end_date lectureEndDate
		, lecture_room_name lectureRoomName
		, lecture_student_capacity lectureStudentCapacity
		, login_id loginId
		, lecture_active lectureActive
		, create_date createDate
		, update_date updateDate
	FROM lecture
	WHERE lecture_active = '0'
	</select>	
	
	
	<update id="updateLectureActive"
		parameterType="String">
		UPDATE lecture
		SET lecture_active = '1'
		WHERE lecture_name = #{lectureName}
	</update>
	
	<delete id="deleteLecutre"
		parameterType="String"></delete>
		
	<select id="selectSubejctList"
		resultType="String">
		SELECT DISTINCT
			subject_name subjectName
		FROM subject
		</select>
		
	<insert id="insertSubject"
		parameterType="String">
		INSERT INTO lecture_subject(
			lecture_name
			, subject_name
		)
		VALUES(
			#{lectureName}
			, #{subjectName}
		)
	</insert>
	
	<select id="selectSubjectListByLectureName"
		parameterType="String"
		resultType="String">
		SELECT distinct
			subject_name subjectName 
		FROM lecture_subject
		WHERE lecture_name = #{lectureName}
	</select>
	
	<select id="selectLectureOneByLectureName"
		parameterType="String"
		resultType="kr.co.gdu.lms.vo.Lecture">
		select
			lecture_name lectureName
			, teacher
			, manager
			, lecture_start_date lectureStartDate
			, lecture_end_date lectureEndDate
			, lecture_room_name lectureRoomName
			, lecture_student_capacity lectureStudentCapacity
			, login_id loginId
			, lecture_active lectureActive
			, create_date createDate
			, update_date updateDate
		FROM lecture
		WHERE lecture_name = #{lectureName}
	</select>
	
	<select id="selectTextbookByLectureName"
		parameterType="String"
		resultType="map">
		SELECT distinct
			ls.lecture_name lectureName
			, ls.subject_name subjectName
			, tb.textbook_name textbookName
			, tb.textbook_publisher textbookPublisher
		FROM subject_textbook st
			INNER JOIN lecture_subject ls
			ON st.subject_name = ls.subject_name
			INNER JOIN textbook tb
			ON st.textbook_no = tb.textbook_no
		WHERE lecture_name = #{lectureName}
		ORDER BY ls.subject_name DESC;
	</select>
	
	<delete id="delSubjectOneByLectureName"
		parameterType="String">
		
	</delete>
	
	<update id="updateLecture"
		parameterType="kr.co.gdu.lms.vo.Lecture">
		UPDATE lecture
		SET 
			teacher = #{teacher}
			, manager = #{manager}
			, lecture_start_date = #{lectureStartDate}
			, lecture_end_date = #{lectureEndDate}
			, lecture_room_name = #{lectureRoomName}
			, lecture_student_capacity = #{lectureStudentCapacity}
		WHERE lecture_name = #{lectureName}
	</update>
	
	<!-- 전체 시간표리스트보기 -->
	<select id="selectScheduleList" parameterType="java.util.Map" resultType="kr.co.gdu.lms.vo.CalendarMap">
		SELECT 
			s.schedule_no scheduleNo
			, ls.lecture_name lectureName
			, ls.subject_name subjectName
			, day(s.schedule_date) scheduleDateDay
		FROM 
			schedule s
		INNER JOIN 
			lecture_subject ls
		ON 
			s.lecture_subject_no = ls.lecture_subject_no
		WHERE 
			MONTH(s.schedule_date) = #{m} AND YEAR(s.schedule_date) = #{y};
	</select>
	
	<!-- 시간표추가 -->
	<insert id="insertSchedule" parameterType="kr.co.gdu.lms.vo.Schedule">
		INSERT INTO schedule(
			schedule_date
			,lecture_subject_no
			,create_date
			,update_date
		) VALUES(
			#{scheduleDate}
			,#{lectureSubjectNo}
			,NOW()
			,NOW());
	</insert>
	
	<!-- 시간표수정 -->
	<update id="updateSchedule" parameterType="kr.co.gdu.lms.vo.Schedule">
		UPDATE schedule SET 
			schedule_date = #{scheduleDate}
			,lecture_subject_no = #{lectureSubjectNo}
			,update_date = NOW() 
		WHERE schedule_no = #{scheduleNo}
	</update>
	
	<!-- 시간표삭제 -->
	<delete id="deleteSchedule" parameterType="int">
		DELETE FROM schedule 
		WHERE schedule_no = #{scheduleNo};
	</delete>
	
	<!-- 강의과목리스트 -->
	<select id="selectLectureSubjecList" resultType="kr.co.gdu.lms.vo.LectureSubject">
		SELECT 
			lecture_subject_no lectureSubjectNo
			,lecture_name lectureName
			,subject_name subjectName 
		FROM lecture_subject;
	</select>
	
	<!-- 시간표상세보기 -->
	<select id="selectScheduleOne" parameterType="int" resultType="java.util.Map">
		SELECT 
			s.schedule_no scheduleNo
			, s.schedule_date scheduleDate
			, s.lecture_subject_no lectureSubjectNo
			, ls.lecture_name lectureName
			, ls.subject_name subjectName
		FROM schedule s
		INNER JOIN lecture_subject ls
		ON s.lecture_subject_no = ls.lecture_subject_no
		where s.schedule_no = #{scheduleNo};
	</select>
	
	<!-- 멤버별 강의시간표 보기 -->
	<select id="selectMemberSchedule" parameterType="java.util.Map" resultType="kr.co.gdu.lms.vo.CalendarMap">
		SELECT 
			s.schedule_no scheduleNo
			, day(s.schedule_date) scheduleDateDay
			, s.lecture_subject_no lectureSubjectNo
			, ed.lecture_name lectureName
			, ls.subject_name subjectName
		FROM schedule s
		INNER JOIN lecture_subject ls
			ON s.lecture_subject_no = ls.lecture_subject_no
		INNER JOIN lecture l
			ON l.lecture_name = ls.lecture_name
		INNER JOIN education ed
			ON ed.lecture_name = l.lecture_name
		INNER JOIN login lo
			ON lo.login_id = ed.login_id
		WHERE lo.login_id = #{loginId} AND MONTH(s.schedule_date) = #{m} AND YEAR(s.schedule_date) = #{y};
	</select>
	
	<select id="selectLectureName"
		parameterType="String"
		resultType="int">
	SELECT COUNT(*)
	FROM lecture
	WHERE lecture_name = #{lectureName}
	</select>
</mapper>