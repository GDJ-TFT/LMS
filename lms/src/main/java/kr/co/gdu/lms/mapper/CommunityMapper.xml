<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.gdu.lms.mapper.CommunityMapper">

	<!--커뮤니티 crud-->
	<!--커뮤니티 게시글 입력-->
	<insert id="insertCommunity"
			parameterType="kr.co.gdu.lms.vo.Community">
		<selectKey resultType="int" keyProperty="communityNo" order="AFTER">
        	SELECT LAST_INSERT_ID();
        </selectKey>
		INSERT INTO community (
			community_title
			, community_content
			, login_id
			, create_date
			, update_date
			, community_pw
		) VALUES(
			#{communityTitle}
			, #{communityContent}
			, #{loginId}
			, NOW()
			, NOW()
			, PASSWORD(#{communityPw})
		);
	</insert>
	
	<!--커뮤니티 게시글 selectOne-->
	<select id="selectCommunityOne"
			parameterType="int"
			resultType="kr.co.gdu.lms.vo.CommunityMember">
		SELECT
			c.community_no communityNo
			, c.community_title communityTitle
			, c.community_content communityContent
			, c.community_pw communityPw
			, c.login_id loginId
			, mf.member_file_name memberFileName
			, c.create_date createDate
			, c.update_date updateDate
		FROM community c
		JOIN member_file mf
			ON c.login_id = mf.login_id
		WHERE c.community_no = #{communityNo};
	</select>
	
	<!--커뮤니티 게시글 List-->
	<select id="selectCommunityList"
			parameterType="java.util.Map"
			resultType="kr.co.gdu.lms.vo.Community">
		SELECT
			community_no communityNo
			, community_title communityTitle
			, login_id loginId
			, create_date createDate
		FROM community
		ORDER BY create_date DESC
		LIMIT #{startRow}, #{rowPerPage};
	</select>
	
	<!-- 커뮤니티 게시글 총 개수 -->
	<select id="countCommunityList"
			resultType="int">
		SELECT COUNT(*) FROM community;
	</select>
	
	
	<!--커뮤니티 게시글 수정-->
	<update id="updateCommunity"
			parameterType="kr.co.gdu.lms.vo.Community">
		UPDATE community SET
			community_title=#{communityTitle}
			, community_content=#{communityContent}
			, update_date=NOW()
		WHERE community_no = #{communityNo}
			AND community_pw = PASSWORD(#{communityPw});
	</update>
	
	<!--커뮤니티 글 삭제-->
	<delete id="deleteCommunity"
			parameterType="kr.co.gdu.lms.vo.Community">
		DELETE FROM community
		WHERE community_no = #{communityNo}
			AND community_pw = PASSWORD(#{communityPw});
	</delete>
	
	<!--커뮤니티 파일 입력-->
	<insert id="insertCommunityFile"
			parameterType="kr.co.gdu.lms.vo.CommunityFile">
		INSERT INTO community_file(
			community_no
			, login_id
			, community_file_name
			, community_file_type
			, community_file_origin_name
			, community_file_size
			, community_file_create_date
		) VALUES (
			#{communityNo}
			, #{loginId}
			, #{communityFileName}
			, #{communityFileType}
			, #{communityFileOriginName}
			, #{communityFileSize}
			, NOW()
		);
	</insert>
	
	<!--커뮤니티 파일 selectOne-->
	<select id="selectCommunityFileOne"
			parameterType="int"
			resultType="kr.co.gdu.lms.vo.CommunityFile">
		SELECT
			community_file_no communityFileNo
			, community_file_name communityFileName
			, community_file_type communityFileType
			, community_file_origin_name communityFileOriginName
			, community_file_size communityFileSize
		FROM community_file
		WHERE community_no = #{communityNo};
	</select>
	
	<!-- 커뮤니티 파일 이름 select -->
	<select id="selectCommunityfileNameList"
			parameterType="int"
			resultType="String">
		SELECT
			community_file_name communityFileName
		FROM community_file
		WHERE community_no = #{communityNo};
	</select>
	
	
	<!--커뮤니티 파일 삭제-->
	<delete id="deleteCommunityFileList"
			parameterType="int">
		DELETE FROM community_file
		WHERE community_no = #{communityNo};
	</delete>
	
	<!-- 커뮤니티 파일 1개만 삭제-->
	<delete id="deleteCommunityFileOne"
			parameterType="int">
		DELETE FROM community_file
		WHERE community_file_no = #{communityFileNo};
	</delete>
	
	<!-- 커뮤니티 추천 개수 -->
	<select id="selectRecommendCnt"
			parameterType="int"
			resultType="int">
		SELECT COUNT(*)
		FROM recommend
		WHERE community_no =  #{communityNo};
	</select>
	
	<!--커뮤니티 게시글 추천입력-->
	<insert id="insertRecommend"
			parameterType="kr.co.gdu.lms.vo.Recommend">
		INSERT INTO recommend
		VALUES (
			#{loginId}
			, #{communityNo}
			, NOW()
		);
	</insert>
	
	<!-- 커뮤니티 추천 중복(1은 추천함, 0은 추천안함)-->
	<select id="selectRecommendCheck"
			parameterType="kr.co.gdu.lms.vo.Recommend"
			resultType="int">
		SELECT COUNT(*) cnt
		FROM recommend
		WHERE login_id = #{loginId} AND community_no = #{communityNo};
	</select>
	
	<!--인기글 5개 LIST-->
	<select id="selectRecommendList"
			parameterType="String"
			resultType="kr.co.gdu.lms.vo.Recommend">
		SELECT
			c.community_no communityNo
			, c.community_title communityTitle
			, c.community_content communityContent
			, c.create_date createDate 
			, COUNT(*) cnt
		FROM recommend r
		JOIN community c
			ON r.community_no = c.community_no
		GROUP BY c.community_no
		ORDER BY cnt DESC
		LIMIT 0,5;
	</select>
	
	<!--댓글 crud-->
	<!--댓글 입력-->
	<insert id="insertCommunityComment"
			parameterType="kr.co.gdu.lms.vo.CommunityComment">
		INSERT INTO community_comment
		VALUES (
			#{loginId}
			, NOW()
			, #{communityCommentContent}
			, #{communityNo}
			, NOW()
		); 
	</insert>

	<!--댓글 수정-->
	<update id="updateCommunityComment"
			parameterType="kr.co.gdu.lms.vo.CommunityComment">
		UPDATE community_comment SET
			community_comment_content = #{communityCommentContent}
			, update_date = NOW()
		WHERE login_id = #{loginId}
			AND community_no = #{communityNo}
			AND create_date = #{createDate};
	</update>
	
	<!--댓글 삭제-->
	<delete id="deleteCommunityComment"
			parameterType="kr.co.gdu.lms.vo.CommunityComment">
		DELETE FROM community_comment
		WHERE login_id = #{loginId}
			AND community_no = #{communityNo}
			AND create_date = #{createDate};
	</delete>
	
	<!--부모글 삭제시 댓글 전체 삭제-->
	<delete id="deleteCommunityCommentByCommunityNo"
			parameterType="kr.co.gdu.lms.vo.CommunityComment">
		DELETE FROM community_comment
		WHERE community_no = #{communityNo};
	</delete>
	
	<!-- 댓글 select-->
	<select id="selectCommunityCommentList"
			parameterType="java.util.Map"
			resultType="kr.co.gdu.lms.vo.CommunityComment">
		SELECT
			login_id loginId
			, create_date createDate
			, community_comment_content communityCommentContent
			, community_no communityNo
			, update_date updateDate
		FROM community_comment
		WHERE community_no = #{communityNo}
		ORDER BY create_date ASC
		LIMIT #{commentStartRow}, #{commentRowPerPage};
	</select>
	
	<!-- 커뮤니티 게시글 총 개수 -->
	<select id="countCommunityComment"
			resultType="int">
		SELECT COUNT(*) FROM community_comment;
	</select>
	
	<!-- selectQnAlist 영인 -->
	<select id="selectQnaList"
		resultType="kr.co.gdu.lms.vo.Qna">
		SELECT
			qna_no qnaNo
			, qna_title qnaTitle
			, qna_content qnaContent
			, login_id loginId
			, create_date createDate
			, qna_disclosure qnaDisclosure
			, qna_kind qnaKind
			, qna_state qnaState
		FROM qna
		WHERE qna_kind = '문의'
	</select>
	
</mapper>