<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.gdu.lms.mapper.LectureMapper">
	<select id="selectTeacher"
			resultType = "kr.co.gdu.lms.vo.Teacher">
			SELECT
				login_id loginId
				, teacher_name teacherName
				, teacher_birth teacherBirth
				, address
				, detail_addr detailAddr
				, teacher_email teacherEmail
				, teacher_phone teacherPhone
				, graduate
				, create_date createDate
				, update_date updateDate
			FROM teacher
	</select>
	
	<select id="selectManager"
			resultType = "kr.co.gdu.lms.vo.Manager">
		SELECT
			login_id loginId
			, manager_name managerName
			, manager_birth manaberBirth
			, manager_gender managerGender
			, address
			, detail_addr detailAddr
			, manager_email managerEmail
			, manager_phone managerPhone
			, dept_no deptNo
			, position_no positionNo
			, create_date createDate
			, update_date updateDate
		FROM manager
	</select>
	
	<select id="selectLectureRoom"
			resultType = "kr.co.gdu.lms.vo.LectureRoom">
		SELECT
			lecture_room_name lectureRoomName
			, lecture_room_location lectureRoomLocation
			, lecture_room_admit lectureRoomAdmit
			, create_date createDate
			, update_date updateDate
		FROM lecture_room
	</select>
	
	<insert id="insertLecture"
		parameterType="kr.co.gdu.lms.vo.Lecture">
		INSERT INTO lecture(
			lecture_name
			, teacher
			, manager
			, lecture_start_date
			, lecture_end_date
			, lecture_room_name
			, lecture_student_capacity
			, login_id
			, lecture_active
			, create_date
			, update_date)
		VALUES(
			#{lectureName}
			, #{teacher}
			, #{manager}
			, #{lectureStartDate}
			, #{lectureEndDate}
			, #{lectureRoomName}
			, #{lectureStudentCapacity}
			, #{loginId}
			, '0'
			, NOW()
			, NOW()
			)
	</insert>
	
	<select id="selectLectureList"
		resultType="kr.co.gdu.lms.vo.Lecture">
	select
		lecture_name lectureName
		, teacher
		, manager
		, lecture_start_date lectureStartDate
		, lecture_end_date lectureEndDate
		, lecture_room_name lectureRoomName
		, lecture_student_capacity lectureStudentCapacity
		, login_id loginId
		, lecture_active lectureActive
		, create_date createDate
		, update_date updateDate
	FROM lecture
	WHERE lecture_active = '1'
	</select>	
	
	<select id="selectNotAcceptLectureList"
		resultType="kr.co.gdu.lms.vo.Lecture">
	select
		lecture_name lectureName
		, teacher
		, manager
		, lecture_start_date lectureStartDate
		, lecture_end_date lectureEndDate
		, lecture_room_name lectureRoomName
		, lecture_student_capacity lectureStudentCapacity
		, login_id loginId
		, lecture_active lectureActive
		, create_date createDate
		, update_date updateDate
	FROM lecture
	WHERE lecture_active = '0'
	</select>	
	
	
	<update id="updateLectureActive"
		parameterType="String">
		UPDATE lecture
		SET lecture_active = '1'
		WHERE lecture_name = #{lectureName}
	</update>
	
	<delete id="deleteLecutre"
		parameterType="String"></delete>
		
	<select id="selectSubejctList"
		resultType="String">
		SELECT DISTINCT
			subject_name subjectName
		FROM subject
		</select>
		
	<insert id="insertSubject"
		parameterType="String">
		INSERT INTO lecture_subject(
		lecture_name, subject_name)
		VALUES(#{lectureName}, #{subjectName})
	</insert>
	
	<select id="selectSubjectListByLectureName"
		parameterType="String"
		resultType="String">
		SELECT distinct
			subject_name subjectName 
		FROM lecture_subject
		WHERE lecture_name = #{lectureName}
	</select>
	
	<select id="selectLectureOneByLectureName"
		parameterType="String"
		resultType="kr.co.gdu.lms.vo.Lecture">
		select
			lecture_name lectureName
			, teacher
			, manager
			, lecture_start_date lectureStartDate
			, lecture_end_date lectureEndDate
			, lecture_room_name lectureRoomName
			, lecture_student_capacity lectureStudentCapacity
			, login_id loginId
			, lecture_active lectureActive
			, create_date createDate
			, update_date updateDate
		FROM lecture
		WHERE lecture_name = #{lectureName}
	</select>
	
	<select id="selectTextbookByLectureName"
		parameterType="String"
		resultType="map">
		SELECT distinct
			ls.lecture_name lectureName
			, ls.subject_name subjectName
			, tb.textbook_name textbookName
			, tb.textbook_publisher textbookPublisher
		FROM subject_textbook st
			INNER JOIN lecture_subject ls
			ON st.subject_name = ls.subject_name
			INNER JOIN textbook tb
			ON st.textbook_no = tb.textbook_no
		WHERE lecture_name = #{lectureName}
		ORDER BY ls.subject_name DESC;
	</select>
</mapper>